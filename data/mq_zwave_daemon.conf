driver_device = "/dev/ttyACM0";                             #path to ZW device
config_path = "/home/jaromir/mq_system/open-zwave/config/";           #path to ZW configuration folder - such folder contains XML files with device descriptions etc.
network_data_path = "/etc/mq_system/";                      #where to store ZW network state - state is stored in file so the library remembers devices etc. in network
#log_level = 0;                  # trace = 0, debug = 1, info = 2, warn = 3, err = 4, critical = 5, off = 6

#sensors specify what to collect
sensors = (
            {
                name = "doma/patro2/koupelna/rekuperace";  # name for MQTT
                values = ( 
                    {
                        value_id = 0x40000064C4012L;  # identifier
                        status = true;          # read sensor
                    },
                    {
                        value_id = 0x64C8012L;  # identifier
                        status = true;          # read sensor
                        refresh = 120;
                    }
                );
            },
            {
                name = "doma/suteren/drevnik/bojler";  # name for MQTT
                values = ( 
                    {
                        value_id = 0x40000084C4012L;  # identifier
                        status = true;                  # read sensor
                    },
                    {
                        value_id = 0x84C8012L;  # identifier
                        status = true;                  # read sensor
                        refresh = 120;
                    }
                );
            },
            {
                name = "doma/patro2/koupelna/topeni";    # name for MQTT
                values = (
                    {
                        value_id = 0x10000094C4012L;  # identifier
                        status = true;                  # read sensor
                        refresh = 3600;
                    },
                    {
                        value_id = 0x950C012L;
                        status = true;                  # read sensor
                        set = true;                     # write sensor
                    }
                );
            },
            {
                name = "doma/patro2/pokojicek/roleta";    # name for MQTT
                values = (
                    {
                        value_id = 0x4498011L;          # identifier    //0x2498011
                        refresh_limit = 10;             # min seconds between value reports
                        status = true;                  # read sensor
                        set = true;                     # write sensor
                    }
                );
            },
            {
                name = "doma/patro2/loznice/roleta";    # name for MQTT
                values = (
                    {
                        value_id = 0x2498011L;          # identifier    //0x2498011
                        refresh_limit = 10;             # min seconds between value reports
                        status = true;                  # read sensor
                        set = true;                     # write sensor
                    }
                );
            },
            {
                name = "doma/patro2/pokoj/roleta";    # name for MQTT
                values = (
                    {
                        value_id = 0x3498011L;          # identifier    //0x2498011
                        refresh_limit = 10;             # min seconds between value reports
                        status = true;                  # read sensor
                        set = true;                     # write sensor
                    }
                );
            },
            {
                name = "doma/cudlik/bila";    # name for MQTT
                values = (
                    {
                        value_id = 0x10000000556C013L;  # identifier
                        status = true;                  # read sensor
                    }
                );
            }
);