{block scripts} <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
        <script src="https://code.jquery.com/jquery-3.2.1.slim.js"></script>
	<script type="text/javascript">
		$('#text').append('Location: ' + window.location.hostname + ' Port: ' + Number(window.location.port));
		var port = Number(window.location.port);
		if (port == 0 && window.location.protocol == "http:")
			port = 80;
		if (port == 0 && window.location.protocol == "https:")
                        port = 443;
		client = new Paho.MQTT.Client(window.location.hostname, port , "/ws/", "myclientid_" + parseInt(Math.random() * 100, 10));
		var options = {
		     cleanSession: true,
	             keepAliveInterval: 30,
		     //Gets Called if the connection has successfully been established
		     onSuccess: function () {
		          $('#content').text('Connected...');
			  client.subscribe('#', { qos: 2 });
		     }, 
		     //Gets Called if the connection could not be established
		     onFailure: function (message) {
		         $('#content').text('Connection failed: ' + message.errorMessage);
		     }
		};
		//Reconnect
		client.onConnectionLost = function (responseObject) {
                     $('#content').text('Connection lost trying to reconnect... ' + responseObject.errorMessage);
                     client.connect(options);
                };
		//Parse mqtt message
		client.onMessageArrived = function (message) {
			var timestamp = new Date();
			var sensor = message.destinationName.replace(new RegExp("\/","g"), '\\/');
			if (!$('#' + sensor).length){
				$('#sensors').append("<div class='sensor' id='" +  message.destinationName + "'><span class='sensor_name'>" +  message.destinationName + "</span></div>");
			}
			try {
				var data = JSON.parse(message.payloadString); 
				for (var property in data) {
				    if (data.hasOwnProperty(property)) {
					var value = Array.isArray(data[property]) ? data[property][0] : data[property];
					if (!$('#' + sensor + ' .' + property).length){
						$('#' + sensor).append('<div class="' + property + '"><span class="value_time">' + timestamp.toLocaleString() + '</span> <span class="value_name">' + property + '</span> <span class="value">' + value.toFixed(2) + '</span></div>');
						if(Array.isArray(data[property])){
							$('#' + sensor + ' > .' + property).append(' <span class="units">' +data[property][1] + '</span>');
						}
					}
				        $('#' + sensor + ' > .' + property + ' > .value_time').text(timestamp.toLocaleString());
					$('#' + sensor + ' > .' + property + ' > .value').text(value.toFixed(2));
				    }
				}				
			}catch (err){
				$('#content').text("JSON parse error: " + err.message);
			}
		};
		//Attempt to connect
		client.connect(options);		
	</script>
{/block}
{block content}
	<h1>Sensory</h1>
	{var $sensor = ""}
	<div id="sensors">
	{foreach $posts as $post}
		{if $sensor != $post->sensor_name}
			{if !$iterator->first}
				</div>
			{/if}
			{var $sensor = $post->sensor_name}
			<div class="sensor" id="{$post->sensor_name}">
			<span class="sensor_name">{$post->sensor_name}</span>
		{/if}
		<a href="{link Graph: $post->sensor_hash, $post->value_name}"><div n:class="$post->value_name">
		<span class="value_time">{$post->timestamp|date:'j. n. Y G:i:s'}</span> {* date:'j. n. Y G:i:s  *}
		<span class="value_name">{$post->value_name}</span>
		<span class="value">{$post->value|number:2}</span>
		<span class="units">{$post->units_name}</span>
		</div></a>
		{if $iterator->last}
			</div>
		{/if}
	{/foreach}
	</div>
	<h3>Websocket status</h3>
	<div id="content"></div>
{/block}
